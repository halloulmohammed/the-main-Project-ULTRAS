{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haloul\\\\Desktop\\\\the-main-Project-ULTRAS-main\\\\src\\\\component\\\\Comments.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../style/comments.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Comments = () => {\n  _s();\n  const [comments, setComments] = useState([{}]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n  const handleInputChange = e => {\n    setNewComment(e.target.value);\n  };\n  const handleuserName = e => {\n    setusername(e.target.value);\n  };\n  const handleAddComment = () => {\n    if (newComment.trim() && username.trim()) {\n      setComments([...comments, {\n        name: username,\n        comment: newComment\n      }]);\n      setusername(\"\");\n      setNewComment(\"\");\n    }\n  };\n  const startIndex = 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"comments-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: handleuserName,\n        placeholder: \"enter your name\",\n        id: \"usrname-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: newComment,\n        onChange: handleInputChange,\n        placeholder: \"Add a comment\",\n        rows: \"4\" // Adjust the number of rows as needed\n        ,\n        cols: \"50\" // Adjust the number of columns as needed\n        ,\n        id: \"comment-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddComment,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: comments.length > 1 ? comments.slice(startIndex).map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: comment.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: comment.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comment yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Comments, \"fnUfOnx9TBLrv6meVWHueD8md1s=\");\n_c = Comments;\nvar _c;\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Comments","_s","comments","setComments","newComment","setNewComment","username","setusername","handleInputChange","e","target","value","handleuserName","handleAddComment","trim","name","comment","startIndex","id","children","className","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","onClick","length","slice","map","index","_c","$RefreshReg$"],"sources":["C:/Users/haloul/Desktop/the-main-Project-ULTRAS-main/src/component/Comments.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"../style/comments.css\";\nexport const Comments = () => {\n  const [comments, setComments] = useState([{}]);\n  const [newComment, setNewComment] = useState(\"\");\n  const [username, setusername] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setNewComment(e.target.value);\n  };\n  const handleuserName = (e) => {\n    setusername(e.target.value);\n  };\n  const handleAddComment = () => {\n    if (newComment.trim() && username.trim()) {\n      setComments([...comments, { name: username, comment: newComment }]);\n      setusername(\"\");\n      setNewComment(\"\");\n    }\n  };\n  const startIndex = 1;\n  return (\n    <div id=\"comments-section\">\n      <div className=\"comment-container\">\n        <input\n          type=\"text\"\n          value={username}\n          onChange={handleuserName}\n          placeholder=\"enter your name\"\n          id=\"usrname-input\"\n        />\n        <input\n          value={newComment}\n          onChange={handleInputChange}\n          placeholder=\"Add a comment\"\n          rows=\"4\" // Adjust the number of rows as needed\n          cols=\"50\" // Adjust the number of columns as needed\n          id=\"comment-input\"\n        />\n\n        <button onClick={handleAddComment}>Submit</button>\n      </div>\n      <div>\n        {comments.length > 1 ? (\n          comments.slice(startIndex).map((comment, index) => (\n            <div key={index} className=\"comment-box\">\n              <h3>{comment.name}</h3>\n              <p>{comment.comment}</p>\n            </div>\n          ))\n        ) : (\n          <p>No comment yet.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}